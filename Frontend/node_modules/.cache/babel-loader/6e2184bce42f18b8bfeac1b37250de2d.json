{"ast":null,"code":"import Axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from '../constantes/userConstants';\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      cpf,\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      cpf,\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register };","map":{"version":3,"sources":["C:/Users/Andor/Documents/GitHub/NaturaVARK/Frontend/src/actions/userActions.js"],"names":["Axios","Cookie","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name","cpf"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,EAA2EC,gBAA3E,EAA6FC,mBAA7F,EAAkHC,mBAAlH,QAA6I,6BAA7I;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEN,mBAAP;AAA4BO,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AAEA,MAAI;AACA,UAAK;AAACI,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAApB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,mBAAP;AAA4BM,MAAAA,OAAO,EAACC;AAApC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AAEH,GALD,CAKE,OAAOK,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,gBAAP;AAAyBQ,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAxC,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AAC5DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAET,qBAAP;AAA8BU,IAAAA,OAAO,EAAE;AAACU,MAAAA,GAAD;AAAMD,MAAAA,IAAN;AAAYb,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB;AAAvC,GAAD,CAAR;;AAEA,MAAI;AACA,UAAK;AAACI,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,qBAAX,EAAkC;AAACQ,MAAAA,GAAD;AAAMD,MAAAA,IAAN;AAAYb,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,KAAlC,CAApB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,qBAAP;AAA8BS,MAAAA,OAAO,EAACC;AAAtC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AAEH,GALD,CAKE,OAAOK,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,kBAAP;AAA2BW,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,SAAQZ,MAAR,EAAgBa,QAAhB","sourcesContent":["import Axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from '../constantes/userConstants';\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n\r\n    try {\r\n        const{data} = await Axios.post(\"/api/users/signin\", {email, password})\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload:data});\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nconst register = (name, email, password) => async (dispatch) => {\r\n    dispatch({type: USER_REGISTER_REQUEST, payload: {cpf, name, email, password}});\r\n\r\n    try {\r\n        const{data} = await Axios.post(\"/api/users/register\", {cpf, name, email, password})\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload:data});\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nexport {signin, register};"]},"metadata":{},"sourceType":"module"}