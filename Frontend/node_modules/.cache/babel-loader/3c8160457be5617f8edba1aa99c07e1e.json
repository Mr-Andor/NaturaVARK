{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constantes/cartConstants\";\n\nfunction cartReducer(state = {\n  cartItems: []\n}, action) {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product === item.product);\n\n      if (product) {\n        return {\n          cartItems: state.cartItems.map(x => x.product === product.product ? item : x)\n        };\n      }\n\n      return {\n        cartItems: [...state.cartItems, item]\n      };\n\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { cartReducer };","map":{"version":3,"sources":["C:/Users/Andor/Documents/GitHub/NaturaVARK/Frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","product","find","x","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,6BAAhD;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAA7B,EAAgDC,MAAhD,EAAwD;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,OAAO,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACF,OAAF,KAAcF,IAAI,CAACE,OAA/C,CAAhB;;AACA,UAAIA,OAAJ,EAAa;AACX,eAAO;AACLL,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAqBD,CAAD,IAC7BA,CAAC,CAACF,OAAF,KAAcA,OAAO,CAACA,OAAtB,GAAgCF,IAAhC,GAAuCI,CAD9B;AADN,SAAP;AAKD;;AACD,aAAO;AAAEP,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAb,OAAP;;AACF,SAAKN,gBAAL;AACI,aAAM;AAACG,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,MAAhB,CAAuBF,CAAC,IAAEA,CAAC,CAACF,OAAF,KAAcJ,MAAM,CAACG,OAA/C;AAAZ,OAAN;;AACJ;AACI,aAAOL,KAAP;AAfN;AAiBD;;AAED,SAAQD,WAAR","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constantes/cartConstants\";\r\n\r\nfunction cartReducer(state = { cartItems: [] }, action) {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const product = state.cartItems.find((x) => x.product === item.product);\r\n      if (product) {\r\n        return {\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === product.product ? item : x\r\n          ),\r\n        };\r\n      }\r\n      return { cartItems: [...state.cartItems, item] };\r\n    case CART_REMOVE_ITEM:\r\n        return{cartItems: state.cartItems.filter(x=>x.product !== action.payload)}\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport {cartReducer};\r\n"]},"metadata":{},"sourceType":"module"}